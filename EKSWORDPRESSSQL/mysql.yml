apiVersion: v1
kind: Service
metadata:
  name: wordpress-mysql
  labels:
    app: wordpress
spec:
  ports:
    - port: 3306
  selector:
    app: wordpress
    tier: mysql
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress-mysql
  labels:
    app: wordpress
spec:
  selector:
    matchLabels:
      app: wordpress
      tier: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: wordpress
        tier: mysql
    spec:
      containers:
        - image: mysql:5.7
          name: mysql
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-pass
                  key: password
            - name: MYSQL_DATABASE
              value: wordpress_mysql
            - name: MYSQL_USER
              value: wordpress_user
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-pass
                  key: password
          ports:
            - containerPort: 3306
              name: mysql
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
            - name: init-script
              mountPath: /docker-entrypoint-initdb.d/init-script.sql
              subPath: init-script.sql
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: efs-mysql
        - name: init-script
          configMap:
            name: mysql-init-script
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-init-script
data:
  init-script.sql: |
    GRANT ALL PRIVILEGES ON wordpress_mysql.* TO 'wordpress_user'@'%' WITH GRANT OPTION;
    FLUSH PRIVILEGES;
